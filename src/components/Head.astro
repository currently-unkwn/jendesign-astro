---
// Tools
import { SEO, type Props as SEOProps } from "astro-seo";
import { ClientRouter } from "astro:transitions";
import { getImage } from "astro:assets";

// Data
import { BASE_DATA } from "@/data/siteData";

// Assets
import faviconPngSrc from "../assets/favicon.png";

// Favicons
const appleTouchIcon = await getImage({
  src: faviconPngSrc,
  width: 180,
  height: 180,
  format: "png",
});

// Types
interface Props {
  seo?: SEOProps;
  ogImage?: {
    template: string;
    data?: Record<string, any>;
    alt?: string;
  };
  type?: string;
}

// Props
const { seo, ogImage, type } = Astro.props;

// new URLSearchParams(ogImage?.data) â€” carry data to client-side from server-side
const ogImageUrl = `${Astro.url.origin}/og/${ogImage?.template ?? "default"}.png?${new URLSearchParams(ogImage?.data)}`;
---

<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="apple-touch-icon" href={appleTouchIcon.src} />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <SEO
    title={seo?.title ?? BASE_DATA.title}
    description={seo?.description ?? BASE_DATA.description}
    {...seo}
    openGraph={{
      basic: {
        type: type ?? "website",
        title: seo?.title ?? BASE_DATA.title,

        image: ogImageUrl,
        url: seo?.canonical,
      },
      image: {
        alt: ogImage?.data?.alt,
        type: "image/png",
      },
    }}
    extend={{
      meta: [
        {
          name: "og:description",
          content: seo?.description ?? BASE_DATA.description,
        },
        {
          name: "og:locale",
          content: "en_US",
        },
        {
          name: "og:site_name",
          content: BASE_DATA.title,
        },
      ],
    }}
    twitter={{
      card: "summary_large_image",
      image: ogImageUrl,
      imageAlt: ogImage?.alt,
      site: BASE_DATA.title,
      title: seo?.title ?? BASE_DATA.title,
      description: seo?.description ?? BASE_DATA.description,
    }}
  />
  <!-- Control for View Transitons -->
  <ClientRouter />
</head>
