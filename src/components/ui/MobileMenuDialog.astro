---
// Compositions

// Components
import Center from "../compositions/Center.astro";
import Button from "./Button.astro";

// Types
interface Props {
  class?: string;
  name: string;
}

const { class: classList, name } = Astro.props;
---

<dialog class:list={[classList]} data-dialog={name}>
  <div class="content">
    <Center maxWidth="83.5rem" space="space-7" class="height-full">
      <slot />
    </Center>
  </div>
</dialog>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  dialog {
    /* TODO: FIX LAYOUT SHIFTS */

    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    background: transparent;
    width: 100%;
    height: 100%;
  }

  dialog .content {
    --_bg-color: var(--color-primary-lightest);
    --_height: 100%;

    height: var(--_height);
    background-color: var(--_bg-color);

    @media (--laptop-and-up) {
      --_height: var(--header-height);
      --_bg-color: var(--color-white);
    }
  }

  /**
 * ANIMATIONS
 * Guide: https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/dialog
  */

  /* Open state of the dialog  */
  dialog[data-dialog="mobile-menu"][open] .content {
    opacity: 1;

    @media (--laptop-and-up) {
      transform: translateY(0%);
    }
  }

  /* Closed state of the dialog   */
  dialog[data-dialog="mobile-menu"] .content {
    opacity: 0;

    transition:
      opacity 250ms var(--ease-out),
      transform 250ms var(--ease-out),
      overlay 250ms var(--ease-out) allow-discrete,
      display 250ms var(--ease-out) allow-discrete;
    /* Equivalent to
  transition: all 0.7s allow-discrete; */

    @media (--laptop-and-up) {
      transform: translateY(-100%);
    }
  }

  /* Before open state  */
  /* Needs to be after the previous dialog:open rule to take effect,
    as the specificity is the same */
  @starting-style {
    dialog[data-dialog="mobile-menu"][open] .content {
      opacity: 0;
    }

    @media (--laptop-and-up) {
      dialog[data-dialog="mobile-menu"][open] .content {
        transform: translateY(-100%);
      }
    }
  }
</style>
